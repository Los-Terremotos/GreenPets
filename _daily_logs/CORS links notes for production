CORS links:
https://www.apollographql.com/docs/apollo-server/security/cors
https://www.apollographql.com/docs/apollo-server/api/express-middleware/

https://github.com/apollographql/apollo-server/discussions/7778
https://www.npmjs.com/package/cors
https://github.com/expressjs/cors
https://github.com/troygoode/node-cors-client
https://www.apollographql.com/docs/apollo-server/deployment/heroku/
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSDidNotSucceed?utm_source=devtools&utm_medium=firefox-cors-errors&utm_campaign=default


https://current--greenpets.apollographos.net/graphql

https://community.apollographql.com/t/cors-error-when-including-cookie-credentials/6593
https://blog.logrocket.com/the-ultimate-guide-to-enabling-cross-origin-resource-sharing-cors/
https://stackoverflow.com/questions/49394718/apollo-client-query-error-network-error-failed-to-fetch-how-to-troubleshoot
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin?utm_source=devtools&utm_medium=firefox-cors-errors&utm_campaign=default



Status: blocked
Method: OPTIONS
Domain: current--grenpets.apollographos.net (has a locked icon next to it)
File: graphql
Initiator: fetch
Type: plain
Transferred: CORS Missing Allow Origin
0 ms: 2588 ms



// Enable pre-flight across-the-board
app.options('*', cors(corsOptions), (req, res) => {
  console.log('Handling OPTIONS request for preflight, line 32 index.ts')
  res.sendStatus(200);
})



LINKS FOR CLIENT SIDE DEBUGGING:

https://stackoverflow.com/questions/63681650/what-is-the-difference-between-usequery-and-uselazyquery-in-apollo-graphql
https://www.apollographql.com/docs/react/data/queries/#manual-execution-with-uselazyquery
https://stackoverflow.com/questions/49394718/apollo-client-query-error-network-error-failed-to-fetch-how-to-troubleshoot